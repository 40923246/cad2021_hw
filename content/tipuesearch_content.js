var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期的電腦輔助設計實習的作業倉儲與網頁. \n 封面《SATOR魔方陣》 \n \n \n 學號 40923246 蕭仲佑 \n 網站倉儲:  github_40923246_cad2021_hw \n 網站連結:  嗯對，就是這裡 \n 其他與作者或作業相關資料說明或介紹 \n 無 \n \n', 'tags': '', 'url': 'About.html'}, {'title': '期末考', 'text': '第一階段:mearm 零件檔 \n 第二階段:mearm 組合 \n 第三階段:mearm 模擬', 'tags': '', 'url': '期末考.html'}, {'title': 'TASK', 'text': '\n', 'tags': '', 'url': 'TASK.html'}, {'title': 'hwpages', 'text': 'cad2021成員網站: \n 網站\xa0 \xa0 \xa0 \xa0 \xa0倉儲 \n 40723126 \xa0 40723126 \n 40723135 \xa0 40723135 \n 40723217 \xa0 40723217 \n 40732331 \xa0 40732331 \n 40823114 \xa0 40823114 \n 40823115 \xa0 40823115 \n 40823117 \xa0 40823117 \n 40823119 \xa0 40823119 \n 40823122 \xa0 40823122 \n 40823127 \xa0 40823127 \n 40823146 \xa0 40823146 \n 40823148 \xa0 40823148 \n 40823215 \xa0 40823215 \n 40871106 \xa0 40871106 \n 40923201 \xa0 40923201 \n 40923203 \xa0 40923203 \n 40923204 \xa0 40923204 \n 40923205 \xa0 40923205 \n 40923206 \xa0 40923206 \n 40923207 \xa0 40923207 \n 40923208 \xa0 40923208 \n 40923209 \xa0 40923209 \n 40923210 \xa0 40923210 \n 40923211 \xa0 40923211 \n 40923212 \xa0 40923212 \n 40923213 \xa0 40923213 \n 40923214 \xa0 40923214 \n 40923216 \xa0 40923216 \n 40923217 \xa0 40923217 \n 40923218 \xa0 40923218 \n 40923219 \xa0 40923219 \n 40923220 \xa0 40923220 \n 40923221 \xa0 40923221 \n 40923223 \xa0 40923223 \n 40923224 \xa0 40923224 \n 40923225 \xa0 40923225 \n 40923226 \xa0 40923226 \n 40923227 \xa0 40923227 \n 40923228 \xa0 40923228 \n 40923229 \xa0 40923229 \n 40923230 \xa0 40923230 \n 40923231 \xa0 40923231 \n 40923232 \xa0 40923232 \n 40923233 \xa0 40923233 \n 40923234 \xa0 40923234 \n 40923235 \xa0 40923235 \n 40923236 \xa0 40923236 \n 40923237 \xa0 40923237 \n 40923238 \xa0 40923238 \n 40923239 \xa0 40923239 \n 40923240 \xa0 40923240 \n 40923241 \xa0 40923241 \n 40923242 \xa0 40923242 \n 40923243 \xa0 40923243 \n 40923244 \xa0 40923244 \n 40923245 \xa0 40923245 \n 40923246 \xa0 40923246 \n 40923247 \xa0 40923247 \n 40923248 \xa0 40923248 \n 40923249 \xa0 40923249 \n 40923250 \xa0 40923250 \n 40923251 \xa0 40923251 \n 40923252 \xa0 40923252 \n 40923253 \xa0 40923253 \n 40971220 \xa0 40971220 \n 40971227 \xa0 40971227 \n \n', 'tags': '', 'url': 'hwpages.html'}, {'title': 'HW1', 'text': '想保留的區域 \n HW1 佔學期成績 25% \n HW1 必須在 2021.11.10 22:00 之前完成. \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.11.10 22:00 關閉. \n 作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n\nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n\nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n\nfunction joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n\nfunction joint16_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)\n    sim.setJointTargetPosition(joint16, newVal*deg)\n    sim.setJointTargetPosition(joint20, -newVal*deg)\nend\n\nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor3\')\n    joint16 = sim.getObjectHandle(\'motor16\')\n    joint20 = sim.getObjectHandle(\'motor20\')\n    i = 0\n    deg = math.pi/180\n    print(i)\n    xml = [[\n<ui closeable="true" on-close="closeEventHandler" resizable="true">\n    <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n    <tabs>\n        <tab title="Numeric">a\n            <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n            <label text="" id="3000" wordwrap="true" />\n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="360" on-change="joint1_rotate" />\n            <label text="theta2" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />\n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="185" on-change="joint3_rotate" />\n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="15" on-change="joint16_rotate" />\n        </tab>\n    </tabs>\n</ui>\n]]\n    ui=simUI.create(xml)\n    \nend \n \n (From:  2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf ) \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'SSL-VPN', 'text': '\n SSL-VPN連線申請 SSL-VPN服務教學 \n \n 太偷懶很正常，學校都整理完了，當然就直接超連結解決 \n', 'tags': '', 'url': 'SSL-VPN.html'}, {'title': 'Solidworks 繪圖操作與安裝配置', 'text': '\n Solidworks \xa0緣起說明與介紹 \n \n SolidWorks 是 達梭系統 （Dassault Systemes S.A.）旗下的 SolidWorks 公司開發的，運行在微軟Windows平台下的3D機械CAD軟體。 \n \n SolidWorks 的是產品設計師和機械工程師使用的軟體，全世界其用戶範圍從個人到大公司，涵蓋非常廣泛的橫截面製造業細分市場。截至2011年第一季度，全球約有150多萬工程師，設計師和約15萬家公司是 SolidWorks 的用戶。 \n SolidWorks 公司成立於1993年12月，其總部設在美國麻州康克爾郡，西元1995年發表其第一款產品 SolidWorks 95 ，1997年被達梭系統併購， SolidWorks 公司現在是達梭系統的子公司。 \n \n Solidworks  功能簡介 \n \n SOLIDWORKS \xa0 2017 推出許多增強和改進功能，大多數為針對客戶要求的直接回應。 此版本提供下列優點，著重於幫助您比以往更快速輕鬆地完成工作： \n \n 設計。 以精確先進的塑模功能促進創新。 加快工作速度、提高控制度並降低開銷。 \n \n \n 驗證。 輕鬆自信地解決複雜問題及驗證設計。 提高生產力，同時更深入了解設計效能。 \n \n \n 合作。 在完整供應鏈中有效地共用內容，以加速新產品的創新。 更有效率地利用現有內容及讓所有團隊成員都能參與。 \n \n \n 建立。 實作完全整合且以模型為基礎的製造策略。 使用 3D CAD 模型，包括尺寸、公差、註記、表格及電子資訊，來產生所有的製造可交付項目 \n \n \n 管理。 執行涉及多種領域的產品資料及管理工作流程。 收集和管理整個企業的所有設計資料。 \n \n \n \n Solidworks  繪圖操作 影片 \n \n Solidworks  安裝配置 \n Solidworks 2017 \n \n', 'tags': '', 'url': 'Solidworks 繪圖操作與安裝配置.html'}, {'title': 'Solvespace 繪圖操作與安裝配置', 'text': '\n Solvespace  緣起說明與介紹 \n \n SolveSpace  是一個免費的2D,3D CAD程序。它是一個基於約束的參數建模器，具有簡單的機械仿真功能。由 Jonathan Westhues 和一個志願者社區開發。 \n \n Solvespace  特徵 \n \n Solvespace  應用包括下列： \n \n \n 建模 3D 零件 – 使用拉伸、旋轉、螺旋線和布爾操作（並/差）進行繪製。 \n \n \n 建模 2D 零件 – 將零件繪製為單個部分，並導出為 DXF、PDF、SVG 檔；使用 3D 裝配驗證配合。 \n \n \n 準備 CAM 數據 – 為水刀機或激光切割機導出 2D 矢量圖形； 或生成 STEP、STL，用於導入第三方 CAM 軟件。 \n \n \n 機構設計 – 使用約束求解器模擬平面或空間鏈接，包括銷、球、滑動關節。 \n \n \n 平面和實體幾何 - 用實時尺寸繪圖替換手工求解的三角函數和電子表格。 \n \n \n \n \n Solvespace  繪圖操作 影片 \n \n Solvespace  安裝配置 \n Solvespace 3.0 \n \n \n', 'tags': '', 'url': 'Solvespace 繪圖操作與安裝配置.html'}, {'title': 'CoppeliaSim 運動場景', 'text': '\n Solidworks ： \n \n Solidworks  零件轉出後轉入  CoppeliaSim  操作影片  (Youtube) \n \n Solidworks  零件轉入  CoppeliaSim  教學影片 (Wink) \n \n \n Solvespace ： \n \n Solvespace  零件轉出後轉入  CoppeliaSim  操作影片  (Youtube) \n \n Solvespace \xa0零件轉入  CoppeliaSim  教學影片 (Wink) \n \n \n', 'tags': '', 'url': 'CoppeliaSim 運動場景.html'}, {'title': 'W13', 'text': 'W13 週評分查驗: \n 請在個人的 cad2021_hw 網站中的 HW1 最下方新增一個 H2 的頁面, 標題為 W13 (W 為大寫), 主要查驗個人 meArm 作業所完成的項目: \n 請建立一個 Wink 檔案說明截至目前所完成的兩套 CAD 零組件繪圖進度 (30%). \n 請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂第一軸, 加入 slider , 可以在執行時, 利用滑鼠拖動旋轉 360 度 (30%). \n 請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂其中的 1 ~ 3 軸 (夾爪除外), 加入 UI 介面 slider, 可以在執行時, 利用滑鼠拖動在各軸的極限位置旋轉 (40%). \n 完成上述各項後, 請將結果登錄至 作業區 \n \n 目前零組件進度 \n mearm零組件(wink) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n first axis dynamic scene \n \n second and third axis dynamic scene \n \xa0 \n', 'tags': '', 'url': 'W13.html'}, {'title': 'HW1-1', 'text': 'HW1-1 佔學期成績 15% \n HW1-1 必須在 2021.12.01 22:00 之前完成. \n HW1-1 具體項目成果回報區 將於 2021.11.18 開啟, 於  2021.12.01 22:00 關閉. \n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 40% \n 2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project \n Final Project 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n 彈性製造系統場景設計與製作 \n 請從  https://github.com/mdecourse/scenes  與  https://github.com/mdecourse/models  中選擇場景或模型, 配合  cad2021_textbook.pdf  (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景. \n 彈性製造系統內容說明 \n 範例: \n \n \n', 'tags': '', 'url': 'Final Project.html'}, {'title': 'Final', 'text': '題目   要求 \n STL檔 \n 零件狀態，solidworks組合 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n solidwork組裝+要求 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 心得： \n 自己做出來的很碰壁，只會基礎的solidworks，只會畫不會組的solvespace，只會匯入移動不會動的coppelia sim，甚至連github 的pull requests 都失敗。不過因為有組長的幫忙我才能做到目前這樣，謝謝我的組長(40723217)', 'tags': '', 'url': 'Final.html'}, {'title': '40923246', 'text': 'SSL-VPN \n \n SSL-VPN連線申請 SSL-VPN服務教學 \n \n Solidworks 繪圖操作與安裝配置 \n \n Solidworks \xa0緣起說明與介紹 \n \n SolidWorks 是 達梭系統 （Dassault Systemes S.A.）旗下的 SolidWorks 公司開發的，運行在微軟Windows平台下的3D機械CAD軟體。 \n \n SolidWorks 的是產品設計師和機械工程師使用的軟體，全世界其用戶範圍從個人到大公司，涵蓋非常廣泛的橫截面製造業細分市場。截至2011年第一季度，全球約有150多萬工程師，設計師和約15萬家公司是 SolidWorks 的用戶。 \n SolidWorks 公司成立於1993年12月，其總部設在美國麻州康克爾郡，西元1995年發表其第一款產品 SolidWorks 95 ，1997年被達梭系統併購， SolidWorks 公司現在是達梭系統的子公司。 \n \n Solidworks  功能簡介 \n \n SOLIDWORKS \xa0 2017 推出許多增強和改進功能，大多數為針對客戶要求的直接回應。 此版本提供下列優點，著重於幫助您比以往更快速輕鬆地完成工作： \n \n 設計。 以精確先進的塑模功能促進創新。 加快工作速度、提高控制度並降低開銷。 \n \n \n 驗證。 輕鬆自信地解決複雜問題及驗證設計。 提高生產力，同時更深入了解設計效能。 \n \n \n 合作。 在完整供應鏈中有效地共用內容，以加速新產品的創新。 更有效率地利用現有內容及讓所有團隊成員都能參與。 \n \n \n 建立。 實作完全整合且以模型為基礎的製造策略。 使用 3D CAD 模型，包括尺寸、公差、註記、表格及電子資訊，來產生所有的製造可交付項目 \n \n \n 管理。 執行涉及多種領域的產品資料及管理工作流程。 收集和管理整個企業的所有設計資料。 \n \n \n \n Solidworks  繪圖操作 影片 \n \n Solidworks  安裝配置 \n Solidworks 2017 \n \n Solvespace 繪圖操作與安裝配置 \n \n Solvespace  緣起說明與介紹 \n \n SolveSpace  是一個免費的2D,3D CAD程序。它是一個基於約束的參數建模器，具有簡單的機械仿真功能。由 Jonathan Westhues 和一個志願者社區開發。 \n \n Solvespace  特徵 \n \n Solvespace  應用包括下列： \n \n \n 建模 3D 零件 – 使用拉伸、旋轉、螺旋線和布爾操作（並/差）進行繪製。 \n \n \n 建模 2D 零件 – 將零件繪製為單個部分，並導出為 DXF、PDF、SVG 檔；使用 3D 裝配驗證配合。 \n \n \n 準備 CAM 數據 – 為水刀機或激光切割機導出 2D 矢量圖形； 或生成 STEP、STL，用於導入第三方 CAM 軟件。 \n \n \n 機構設計 – 使用約束求解器模擬平面或空間鏈接，包括銷、球、滑動關節。 \n \n \n 平面和實體幾何 - 用實時尺寸繪圖替換手工求解的三角函數和電子表格。 \n \n \n \n \n Solvespace  繪圖操作 影片 \n \n Solvespace  安裝配置 \n Solvespace 3.0 \n \n \n CoppeliaSim 運動場景 \n \n Solidworks ： \n \n Solidworks  零件轉出後轉入  CoppeliaSim  操作影片  (Youtube) \n \n Solidworks  零件轉入  CoppeliaSim  教學影片 (Wink) \n \n \n Solvespace ： \n \n Solvespace  零件轉出後轉入  CoppeliaSim  操作影片  (Youtube) \n \n Solvespace \xa0零件轉入  CoppeliaSim  教學影片 (Wink) \n \n \n W13 \n W13 週評分查驗: \n 請在個人的 cad2021_hw 網站中的 HW1 最下方新增一個 H2 的頁面, 標題為 W13 (W 為大寫), 主要查驗個人 meArm 作業所完成的項目: \n 請建立一個 Wink 檔案說明截至目前所完成的兩套 CAD 零組件繪圖進度 (30%). \n 請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂第一軸, 加入 slider , 可以在執行時, 利用滑鼠拖動旋轉 360 度 (30%). \n 請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂其中的 1 ~ 3 軸 (夾爪除外), 加入 UI 介面 slider, 可以在執行時, 利用滑鼠拖動在各軸的極限位置旋轉 (40%). \n 完成上述各項後, 請將結果登錄至 作業區 \n \n 目前零組件進度 \n mearm零組件(wink) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n first axis dynamic scene \n \n second and third axis dynamic scene \n \xa0 \n Final \n 題目   要求 \n STL檔 \n 零件狀態，solidworks組合 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n solidwork組裝+要求 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 心得： \n 自己做出來的很碰壁，只會基礎的solidworks，只會畫不會組的solvespace，只會匯入移動不會動的coppelia sim，甚至連github 的pull requests 都失敗。不過因為有組長的幫忙我才能做到目前這樣，謝謝我的組長(40723217) \n', 'tags': '', 'url': '40923246.html'}, {'title': '資料管理', 'text': '隨便啦，這裡空著不會怎樣 \n', 'tags': '', 'url': '資料管理.html'}, {'title': '資料庫', 'text': '', 'tags': '', 'url': '資料庫.html'}, {'title': 'CAD安裝配置', 'text': 'CAD 套件包括 Solidworks, Inventor, NX, Onshape, Solvespace. \n CAD 套件下載安裝與配置 \n CAD 下載安裝與配置流程 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020 下載安裝與配置 」且加上 語音說明 與 字幕. \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱. \n 由於安裝配置 Solidworks 時必須使用 nfu 的 vpn, 因此各學員必須按照 說明 , 完成本學期的 vpn 使用申請. \n Solidworks 分別提供 2017 與 2020 版本: \n SW2017 Professional 安裝光碟下載  (必須先登入 @gm 帳號後才能下載) \n SW2020 Professional 安裝光碟下載  (必須先登入 @gm 帳號後才能下載) \n NX12 版本: \n NX12 安裝光碟下載  (必須先登入 @gm 帳號後才能下載) \n NX12 可攜版本下載 \xa0(必須先登入 @gm 帳號後才能下載) \n Inventor: \n 請在校園網路, 使用 nfu vpn 或設定系上代理主機, 就可以從  https://2019wcm.blogspot.com/2019/07/autodesk-inventor-professional.html  嘗試下載 autodesk.iso 後安裝 Inventor Professional 版本. \n Onshape: \n 至  https://www.onshape.com/en/  申請帳號後使用. \n Solvespace: \n 至  https://solvespace.com  下載或從  https://github.com/solvespace/solvespace  下載原始碼, 以可攜程式系統自行編譯後使用. \n', 'tags': '', 'url': 'CAD安裝配置.html'}, {'title': 'run', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n', 'tags': '', 'url': 'run.html'}, {'title': '參考範例', 'text': '．cad2021 2b 各學員的 cad2021_hw 網站連結 \n \n #  將資料存入  gist,  取其  url url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt" #  利用  open()  開啟  url  後 ,  以  readlines()  讀取後可納入數列 data = open(url).readlines() #  檢查資料筆數 ,  第一筆為  title #print(data) #print(len(data)) data = data[1:] #print(data) for i in range(len(data)): \xa0\xa0\xa0 num_github = data[i]  \xa0\xa0\xa0 num = num_github.split("\\t")[0] \xa0\xa0\xa0 account = num_github.split("\\t")[1] \xa0\xa0\xa0 if account == "": \xa0\xa0\xa0\xa0\xa0\xa0\xa0 account = num \xa0\xa0\xa0 print("<p><a href=\'https://" + str(account) + ".github.io/cad2021_hw\'>"+ str(num) + "</a>""<a href=\'https://github.com/" + str(account) + "/cad2021_hw\'>"+ str(num) + "</a><p>") \n \n \n ．隨機從 2b 學員名單中取出 10 個網站 \n \n from browser import html from browser import document import random brython_div = document["brython_div"] # 將資料存入 gist, 取其 url url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt" # 利用 open() 開啟 url 後, 以 readlines() 讀取後可納入數列 data = open(url).readlines() # 檢查資料筆數, 第一筆為 title #print(data) #print(len(data)) data = data[1:] #print(data) # 根據 href 與 content 將 html 元件中的 anchor 插入頁面 def makeLink(href, content):  brython_div <= html.A(content, href=href)  brython_div <= html.BR() # 從學員資料中隨機取出 10 位學員的網頁進行查核 select = 10 random.shuffle(data) data = data[:10] for i in range(len(data)):  num_github = data[i]   num = num_github.split("\\t")[0]  account = num_github.split("\\t")[1]  if account == "":  account = num  content = str(num)  href = "https://"+ str(account) + ".github.io/cad2021_hw"  makeLink(href, content) \n \n', 'tags': '', 'url': '參考範例.html'}, {'title': 'Wink', 'text': '隨便找一位 有上傳wink影片的網站 \n \n 檢視頁面來源 \n \n \n 找一下程式碼的位置 \n Ctrl+F 關鍵字： winkVideoData \n \n \n <script> var winkVideoData = {  dataVersion: 1,  frameRate: 20,  buttonFrameLength: 10,  buttonFrameOffset: 5,  frameStops: {  }, }; </script> <div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname=" ./../cmsimde /static" data-varname="winkVideoData"  height="600" width="1000" > <source src="./../downloads/ SWwrite.mp4 " type="video/mp4"/></video> <div class="winkVideoOverlayClass"></div> <div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button> <div class="winkVideoControlBarProgressLeftClass"></div> <div class="winkVideoControlBarProgressEmptyMiddleClass"></div> <div class="winkVideoControlBarProgressRightClass"></div> <div class="winkVideoControlBarProgressFilledMiddleClass"></div> <div class="winkVideoControlBarProgressThumbClass"></div> </div> <div class="winkVideoControlBarClass"></div> <div class="winkVideoPlayOverlayClass"></div> </div> \n \n \n delete「 ./../cmsimde 」 \n \n 「 height="600" width="1000" 」改適當尺寸 \n 例：「 height="700" width="1100"」 \n \n 「 SWwrite.mp4 」到自己資料夾downloads，找自己.mp4檔名改上去 \n \n \n 例：<source src="./../downloads/「 目前零件.mp4 」" type="video/mp4" /> \n \n 註：黑底白字程式碼 <span style="color: #ffffff;"><span style="background-color: #000000;">想寫文字</span></span> \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n', 'tags': '', 'url': 'Wink.html'}]};