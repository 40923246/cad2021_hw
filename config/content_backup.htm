<h1>About</h1>
<p>本學期的電腦輔助設計實習的作業倉儲與網頁.</p>
<p>封面《SATOR魔方陣》</p>
<p><img alt="" height="300" src="/images/270368762_616277239605736_3598596647947292611_n.jpg" width="300"/></p>
<hr/>
<p>學號 40923246 蕭仲佑</p>
<p>網站倉儲: <a href="https://github.com/40923246/cad2021_hw">github_40923246_cad2021_hw</a></p>
<p>網站連結: <a href="https://40923246.github.io/cad2021_hw/content/index.html">嗯對，就是這裡</a></p>
<p>其他與作者或作業相關資料說明或介紹</p>
<p>無</p>
<p></p>
<h1>期末考試</h1>
<p><span>第一階段:<span><a href="https://drive.google.com/file/d/1UIvROZtwvrU_Nj9LMy3qsSBzJhPhXhDW/view?usp=sharing">mearm 零件檔</a> </span></span><a href="https://drive.google.com/file/d/1cH8SedBcN9Dth8Sq6MZa_uib38FiNv6A/view?usp=sharing">組合檔</a></p>
<p><span><span><img alt="" height="427" src="/images/期末考_solidworks.png" width="655"/></span></span></p>
<p><span>第二階段:<a href="https://www.youtube.com/watch?v=JneQF8jUMP0">mearm 組合</a></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/JneQF8jUMP0" title="YouTube video player" width="560"></iframe></p>
<p><span>第三階段:mearm 模擬</span></p>
<p><span style="color: #ffffff;"><span style="background-color: #ffffff;">對不起，我真的做不出動態模擬</span></span></p>
<p>心得:電腦輔助、程式設計是我的弱項，我很清楚自己能會、能理解的東西不多，but doing something is better than doing nothing。與其什麼都不做擺爛，還不如做點自己會的東西</p><h1>TASK</h1>
<p></p>
<h2>hwpages</h2>
<p>cad2021成員網站:</p>
<p>網站         倉儲</p>
<p><a href="https://40723126.github.io/cad2021_hw">40723126</a> <a href="https://github.com/40723126/cad2021_hw">40723126</a></p>
<p><a href="https://40723135.github.io/cad2021_hw">40723135</a> <a href="https://github.com/40723135/cad2021_hw">40723135</a></p>
<p><a href="https://40723217.github.io/cad2021_hw">40723217</a> <a href="https://github.com/40723217/cad2021_hw">40723217</a></p>
<p><a href="https://40732331.github.io/cad2021_hw">40732331</a> <a href="https://github.com/40732331/cad2021_hw">40732331</a></p>
<p><a href="https://40823114.github.io/cad2021_hw">40823114</a> <a href="https://github.com/40823114/cad2021_hw">40823114</a></p>
<p><a href="https://40823115.github.io/cad2021_hw">40823115</a> <a href="https://github.com/40823115/cad2021_hw">40823115</a></p>
<p><a href="https://pyc40823117.github.io/cad2021_hw">40823117</a> <a href="https://github.com/pyc40823117/cad2021_hw">40823117</a></p>
<p><a href="https://40823119.github.io/cad2021_hw">40823119</a> <a href="https://github.com/40823119/cad2021_hw">40823119</a></p>
<p><a href="https://40823122.github.io/cad2021_hw">40823122</a> <a href="https://github.com/40823122/cad2021_hw">40823122</a></p>
<p><a href="https://40823127.github.io/cad2021_hw">40823127</a> <a href="https://github.com/40823127/cad2021_hw">40823127</a></p>
<p><a href="https://40823146.github.io/cad2021_hw">40823146</a> <a href="https://github.com/40823146/cad2021_hw">40823146</a></p>
<p><a href="https://40823148.github.io/cad2021_hw">40823148</a> <a href="https://github.com/40823148/cad2021_hw">40823148</a></p>
<p><a href="https://40823215.github.io/cad2021_hw">40823215</a> <a href="https://github.com/40823215/cad2021_hw">40823215</a></p>
<p><a href="https://40871106.github.io/cad2021_hw">40871106</a> <a href="https://github.com/40871106/cad2021_hw">40871106</a></p>
<p><a href="https://40923201.github.io/cad2021_hw">40923201</a> <a href="https://github.com/40923201/cad2021_hw">40923201</a></p>
<p><a href="https://youshin40923203.github.io/cad2021_hw">40923203</a> <a href="https://github.com/youshin40923203/cad2021_hw">40923203</a></p>
<p><a href="https://40923204.github.io/cad2021_hw">40923204</a> <a href="https://github.com/40923204/cad2021_hw">40923204</a></p>
<p><a href="https://40923205.github.io/cad2021_hw">40923205</a> <a href="https://github.com/40923205/cad2021_hw">40923205</a></p>
<p><a href="https://40923206-1.github.io/cad2021_hw">40923206</a> <a href="https://github.com/40923206-1/cad2021_hw">40923206</a></p>
<p><a href="https://40923207.github.io/cad2021_hw">40923207</a> <a href="https://github.com/40923207/cad2021_hw">40923207</a></p>
<p><a href="https://nfu40923208.github.io/cad2021_hw">40923208</a> <a href="https://github.com/nfu40923208/cad2021_hw">40923208</a></p>
<p><a href="https://nfu40923209.github.io/cad2021_hw">40923209</a> <a href="https://github.com/nfu40923209/cad2021_hw">40923209</a></p>
<p><a href="https://40923210.github.io/cad2021_hw">40923210</a> <a href="https://github.com/40923210/cad2021_hw">40923210</a></p>
<p><a href="https://a40923211.github.io/cad2021_hw">40923211</a> <a href="https://github.com/a40923211/cad2021_hw">40923211</a></p>
<p><a href="https://40923212.github.io/cad2021_hw">40923212</a> <a href="https://github.com/40923212/cad2021_hw">40923212</a></p>
<p><a href="https://40923213.github.io/cad2021_hw">40923213</a> <a href="https://github.com/40923213/cad2021_hw">40923213</a></p>
<p><a href="https://40923214.github.io/cad2021_hw">40923214</a> <a href="https://github.com/40923214/cad2021_hw">40923214</a></p>
<p><a href="https://40923216.github.io/cad2021_hw">40923216</a> <a href="https://github.com/40923216/cad2021_hw">40923216</a></p>
<p><a href="https://40923217.github.io/cad2021_hw">40923217</a> <a href="https://github.com/40923217/cad2021_hw">40923217</a></p>
<p><a href="https://40923218.github.io/cad2021_hw">40923218</a> <a href="https://github.com/40923218/cad2021_hw">40923218</a></p>
<p><a href="https://nfu40923219.github.io/cad2021_hw">40923219</a> <a href="https://github.com/nfu40923219/cad2021_hw">40923219</a></p>
<p><a href="https://40923220.github.io/cad2021_hw">40923220</a> <a href="https://github.com/40923220/cad2021_hw">40923220</a></p>
<p><a href="https://40923221.github.io/cad2021_hw">40923221</a> <a href="https://github.com/40923221/cad2021_hw">40923221</a></p>
<p><a href="https://40923223.github.io/cad2021_hw">40923223</a> <a href="https://github.com/40923223/cad2021_hw">40923223</a></p>
<p><a href="https://s40923224.github.io/cad2021_hw">40923224</a> <a href="https://github.com/s40923224/cad2021_hw">40923224</a></p>
<p><a href="https://40923225.github.io/cad2021_hw">40923225</a> <a href="https://github.com/40923225/cad2021_hw">40923225</a></p>
<p><a href="https://40923226.github.io/cad2021_hw">40923226</a> <a href="https://github.com/40923226/cad2021_hw">40923226</a></p>
<p><a href="https://40923227.github.io/cad2021_hw">40923227</a> <a href="https://github.com/40923227/cad2021_hw">40923227</a></p>
<p><a href="https://40923228.github.io/cad2021_hw">40923228</a> <a href="https://github.com/40923228/cad2021_hw">40923228</a></p>
<p><a href="https://40923229.github.io/cad2021_hw">40923229</a> <a href="https://github.com/40923229/cad2021_hw">40923229</a></p>
<p><a href="https://40923230.github.io/cad2021_hw">40923230</a> <a href="https://github.com/40923230/cad2021_hw">40923230</a></p>
<p><a href="https://40923231.github.io/cad2021_hw">40923231</a> <a href="https://github.com/40923231/cad2021_hw">40923231</a></p>
<p><a href="https://40923232.github.io/cad2021_hw">40923232</a> <a href="https://github.com/40923232/cad2021_hw">40923232</a></p>
<p><a href="https://40923233.github.io/cad2021_hw">40923233</a> <a href="https://github.com/40923233/cad2021_hw">40923233</a></p>
<p><a href="https://40923234.github.io/cad2021_hw">40923234</a> <a href="https://github.com/40923234/cad2021_hw">40923234</a></p>
<p><a href="https://40923235.github.io/cad2021_hw">40923235</a> <a href="https://github.com/40923235/cad2021_hw">40923235</a></p>
<p><a href="https://40923236.github.io/cad2021_hw">40923236</a> <a href="https://github.com/40923236/cad2021_hw">40923236</a></p>
<p><a href="https://40923237.github.io/cad2021_hw">40923237</a> <a href="https://github.com/40923237/cad2021_hw">40923237</a></p>
<p><a href="https://40923238.github.io/cad2021_hw">40923238</a> <a href="https://github.com/40923238/cad2021_hw">40923238</a></p>
<p><a href="https://40923239.github.io/cad2021_hw">40923239</a> <a href="https://github.com/40923239/cad2021_hw">40923239</a></p>
<p><a href="https://40923240.github.io/cad2021_hw">40923240</a> <a href="https://github.com/40923240/cad2021_hw">40923240</a></p>
<p><a href="https://40923241.github.io/cad2021_hw">40923241</a> <a href="https://github.com/40923241/cad2021_hw">40923241</a></p>
<p><a href="https://40923242.github.io/cad2021_hw">40923242</a> <a href="https://github.com/40923242/cad2021_hw">40923242</a></p>
<p><a href="https://40923243.github.io/cad2021_hw">40923243</a> <a href="https://github.com/40923243/cad2021_hw">40923243</a></p>
<p><a href="https://40923244.github.io/cad2021_hw">40923244</a> <a href="https://github.com/40923244/cad2021_hw">40923244</a></p>
<p><a href="https://40923245-1.github.io/cad2021_hw">40923245</a> <a href="https://github.com/40923245-1/cad2021_hw">40923245</a></p>
<p><a href="https://40923246.github.io/cad2021_hw">40923246</a> <a href="https://github.com/40923246/cad2021_hw">40923246</a></p>
<p><a href="https://40923247.github.io/cad2021_hw">40923247</a> <a href="https://github.com/40923247/cad2021_hw">40923247</a></p>
<p><a href="https://40923248.github.io/cad2021_hw">40923248</a> <a href="https://github.com/40923248/cad2021_hw">40923248</a></p>
<p><a href="https://40923249-1.github.io/cad2021_hw">40923249</a> <a href="https://github.com/40923249-1/cad2021_hw">40923249</a></p>
<p><a href="https://40923250.github.io/cad2021_hw">40923250</a> <a href="https://github.com/40923250/cad2021_hw">40923250</a></p>
<p><a href="https://40923251.github.io/cad2021_hw">40923251</a> <a href="https://github.com/40923251/cad2021_hw">40923251</a></p>
<p><a href="https://40923252.github.io/cad2021_hw">40923252</a> <a href="https://github.com/40923252/cad2021_hw">40923252</a></p>
<p><a href="https://40923253.github.io/cad2021_hw">40923253</a> <a href="https://github.com/40923253/cad2021_hw">40923253</a></p>
<p><a href="https://40971220.github.io/cad2021_hw">40971220</a> <a href="https://github.com/40971220/cad2021_hw">40971220</a></p>
<p><a href="https://40971227.github.io/cad2021_hw">40971227</a> <a href="https://github.com/40971227/cad2021_hw">40971227</a></p>
<p><img alt="" height="789" src="/images/task1.PNG" width="995"/></p>
<p><img alt="" height="1060" src="/images/task2.PNG" width="954"/></p><h1>HW1</h1>
<p style="text-align: left;"><strong><span style="color: #ffffff; background-color: #ffffff;">想保留的區域</span></strong></p>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.11.10 22:00 關閉.</span></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<h2>SSL-VPN</h2>
<blockquote>
<pre><a href="https://www.nfu.edu.tw/zh/approved-news-nfu/approved-news-adm/8102-110%E5%AD%B8%E5%B9%B4%E5%BA%A6ssl-vpn%E9%80%A3%E7%B7%9A%E9%96%8B%E9%80%9A%E7%94%B3%E8%AB%8B%E5%85%AC%E5%91%8A">SSL-VPN連線申請</a><br/><br/><a href="https://nfucc.nfu.edu.tw/?p=17008">SSL-VPN服務教學<br/></a></pre>
</blockquote>
<p>太偷懶很正常，學校都整理完了，當然就直接超連結解決</p>
<h2>Solidworks 繪圖操作與安裝配置</h2>
<p><strong><img alt="" height="298" src="/images/solidworks圖.PNG" width="401"/></strong></p>
<p><strong>Solidworks</strong> 緣起說明與介紹</p>
<blockquote>
<div><strong>SolidWorks</strong>是<strong>達梭系統</strong>（Dassault Systemes S.A.）旗下的<strong>SolidWorks</strong>公司開發的，運行在微軟Windows平台下的3D機械CAD軟體。<br/><strong></strong></div>
<div><strong></strong></div>
<div><strong>SolidWorks</strong>的是產品設計師和機械工程師使用的軟體，全世界其用戶範圍從個人到大公司，涵蓋非常廣泛的橫截面製造業細分市場。截至2011年第一季度，全球約有150多萬工程師，設計師和約15萬家公司是<strong>SolidWorks</strong>的用戶。</div>
<div><br/><strong>SolidWorks</strong>公司成立於1993年12月，其總部設在美國麻州康克爾郡，西元1995年發表其第一款產品<strong>SolidWorks 95</strong>，1997年被達梭系統併購，<strong>SolidWorks</strong>公司現在是達梭系統的子公司。</div>
</blockquote>
<div style="text-align: left;"><span><strong>Solidworks</strong> 功能簡介</span></div>
<blockquote>
<p><strong>SOLIDWORKS</strong><span><span> </span>2017 推出許多增強和改進功能，大多數為針對客戶要求的直接回應。</span><br/><br/><span>此版本提供下列優點，著重於幫助您比以往更快速輕鬆地完成工作：</span></p>
<ul>
<li>設計。 以精確先進的塑模功能促進創新。 加快工作速度、提高控制度並降低開銷。</li>
</ul>
<ul>
<li>驗證。 輕鬆自信地解決複雜問題及驗證設計。 提高生產力，同時更深入了解設計效能。</li>
</ul>
<ul>
<li>合作。 在完整供應鏈中有效地共用內容，以加速新產品的創新。 更有效率地利用現有內容及讓所有團隊成員都能參與。</li>
</ul>
<ul>
<li>建立。 實作完全整合且以模型為基礎的製造策略。 使用 3D CAD 模型，包括尺寸、公差、註記、表格及電子資訊，來產生所有的製造可交付項目</li>
</ul>
<ul>
<li>管理。 執行涉及多種領域的產品資料及管理工作流程。 收集和管理整個企業的所有設計資料。</li>
</ul>
</blockquote>
<div style="text-align: left;"><span><strong></strong></span></div>
<div style="text-align: left;"><span><strong>Solidworks </strong>繪圖操作<a href="https://www.youtube.com/watch?v=-3-U020uoCU">影片</a></span></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-3-U020uoCU" title="YouTube video player" width="560"></iframe><br/><strong></strong></p>
<p><strong>Solidworks </strong>安裝配置</p>
<p><a href="https://www.youtube.com/watch?v=HGB1pyiq7w4">Solidworks 2017</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/HGB1pyiq7w4" title="YouTube video player" width="560"></iframe></p>
<h2>Solvespace 繪圖操作與安裝配置</h2>
<p><strong><img alt="" height="220" src="/images/solvespace-256.png" width="220"/></strong></p>
<p><strong>Solvespace</strong> 緣起說明與介紹</p>
<blockquote>
<div><strong>SolveSpace </strong>是一個免費的2D,3D CAD程序。它是一個基於約束的參數建模器，具有簡單的機械仿真功能。由 Jonathan Westhues 和一個志願者社區開發。</div>
</blockquote>
<p><strong>Solvespace </strong>特徵</p>
<blockquote>
<div><strong>Solvespace </strong>應用包括下列：</div>
<div>
<ul>
<li>建模 3D 零件 – 使用拉伸、旋轉、螺旋線和布爾操作（並/差）進行繪製。</li>
</ul>
<ul>
<li>建模 2D 零件 – 將零件繪製為單個部分，並導出為 DXF、PDF、SVG 檔；使用 3D 裝配驗證配合。</li>
</ul>
<ul>
<li>準備 CAM 數據 – 為水刀機或激光切割機導出 2D 矢量圖形； 或生成 STEP、STL，用於導入第三方 CAM 軟件。</li>
</ul>
<ul>
<li>機構設計 – 使用約束求解器模擬平面或空間鏈接，包括銷、球、滑動關節。</li>
</ul>
<ul>
<li>平面和實體幾何 - 用實時尺寸繪圖替換手工求解的三角函數和電子表格。</li>
</ul>
</div>
</blockquote>
<p><strong></strong></p>
<p><strong>Solvespace </strong>繪圖操作<a href="https://www.youtube.com/watch?v=FuA59x3MO7Y">影片</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/FuA59x3MO7Y" title="YouTube video player" width="560"></iframe></p>
<p><strong>Solvespace</strong> 安裝配置</p>
<p><strong><a href="https://www.youtube.com/watch?v=ZCj2Nxx8Gz8">Solvespace 3.0</a></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZCj2Nxx8Gz8" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h2>CoppeliaSim 運動場景</h2>
<p><strong><img alt="" height="167" src="/images/CoppeliaSim.png" width="600"/></strong></p>
<p><strong>Solidworks</strong>：</p>
<blockquote>
<p><strong>Solidworks</strong> 零件轉出後轉入 <strong>CoppeliaSim</strong> 操作影片 <a href="https://www.youtube.com/watch?v=s0pu8kKfNlA">(Youtube)</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/s0pu8kKfNlA" title="YouTube video player" width="560"></iframe></p>
<p><strong>Solidworks</strong> 零件轉入 <strong>CoppeliaSim</strong> 教學影片 (Wink)</p>
<p></p>
</blockquote>
<p><strong>Solvespace</strong>：</p>
<blockquote>
<p><strong>Solvespace</strong> 零件轉出後轉入 <strong>CoppeliaSim</strong> 操作影片 <a href="https://www.youtube.com/watch?v=81QLfMdoTfA">(Youtube)</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/81QLfMdoTfA" title="YouTube video player" width="560"></iframe></p>
<p><strong>Solvespace</strong> 零件轉入 <strong>CoppeliaSim</strong> 教學影片 (Wink)</p>
<p></p>
</blockquote>
<h2>W13</h2>
<p>W13 週評分查驗:</p>
<p>請在個人的 cad2021_hw 網站中的 HW1 最下方新增一個 H2 的頁面, 標題為 W13 (W 為大寫), 主要查驗個人 meArm 作業所完成的項目:</p>
<p>請建立一個 Wink 檔案說明截至目前所完成的兩套 CAD 零組件繪圖進度 (30%).</p>
<p>請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂第一軸, 加入<a href="https://www.coppeliarobotics.com/helpFiles/en/simUI-widgets.htm">slider</a>, 可以在執行時, 利用滑鼠拖動旋轉 360 度 (30%).</p>
<p>請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂其中的 1 ~ 3 軸 (夾爪除外), 加入 UI 介面 slider, 可以在執行時, 利用滑鼠拖動在各軸的極限位置旋轉 (40%).</p>
<p>完成上述各項後, 請將結果登錄至<a href="https://github.com/mdecourse/cad2021/discussions/14">作業區</a></p>
<p></p>
<p><strong>目前零組件進度</strong></p>
<p><span>mearm零組件(wink)</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="700" width="1100">
<source src="./../downloads/目前零件.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>first axis dynamic scene</p>
<p></p>
<p>second and third axis dynamic scene</p>
<p><span> </span></p>
<h1>HW1-1</h1>
<p>HW1-1 佔學期成績 15%</p>
<p><span style="background-color: #ffff99;">HW1-1 必須在 2021.12.01 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/6">HW1-1 具體項目成果回報區</a>將於 2021.11.18 開啟, 於 <span style="background-color: #ff99cc;">2021.12.01 22:00 關閉.</span></p>
<h4>作業 1-1: Mirobot 機械手臂場景組合</h4>
<p>說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中六個自由度的 Mirobot 機械手臂.</p>
<p><a href="https://drive.google.com/file/d/1hnoMQ1Hh_Hgdxh7Aym4q43DzLjOWUanR/view?usp=sharing">mirobot_part1_to_part5.7z</a> 為取自  <a href="https://github.com/wlkata/Mirobot-STL">https://github.com/wlkata/Mirobot-STL</a> 的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制各軸作動旋轉的運動模型.</p>
<p>請根據 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中的說明, 完成各項指定任務.</p>
<h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 40%</p>
<p><span style="background-color: #ffff99;">2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/8">Final Project 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>彈性製造系統場景設計與製作</p>
<p>請從 <a href="https://github.com/mdecourse/scenes">https://github.com/mdecourse/scenes</a> 與 <a href="https://github.com/mdecourse/models">https://github.com/mdecourse/models</a> 中選擇場景或模型, 配合 <a href="https://drive.google.com/file/d/1xb1Es8N-FxeG10OSnLNDwwi_tXyNTP9t/view?usp=sharing">cad2021_textbook.pdf</a> (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景.</p>
<p>彈性製造系統內容說明</p>
<h4>範例:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2qc0-yTXBts" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PDSmRPh6TaM" title="YouTube video player" width="560"></iframe></p>
<h2>Final</h2>
<p><a href="https://files.gitter.im/61338b9c6da037398484c1bb/Hy34/linkage-dimensioned.png">題目</a> <a href="https://raw.githubusercontent.com/KmolYuan/Pyslvs-UI/master/docs/img/main-win.png">要求</a></p>
<p><a href="https://drive.google.com/drive/folders/19PK_lntmxLiaSlOrzMcS3vgrlcptQBQT?usp=sharing">STL檔</a></p>
<p>零件狀態，solidworks組合</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1250" width="1650">
<source src="./../downloads/final.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoControlBarClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>solidwork組裝+要求</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1250" width="1650">
<source src="./../downloads/final-2.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoControlBarClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="color: #ffffff;"><span style="background-color: #ffffff;">心得：</span></span></p>
<p><span style="color: #ffffff;"><span style="background-color: #ffffff;">自己做出來的很碰壁，只會基礎的solidworks，只會畫不會組的solvespace，只會匯入移動不會動的coppelia sim，甚至連github 的pull requests 都失敗。不過因為有組長的幫忙我才能做到目前這樣，謝謝我的組長(40723217)</span></span></p><h3>40923246</h3>
<p>SSL-VPN</p>
<blockquote>
<pre><a href="https://www.nfu.edu.tw/zh/approved-news-nfu/approved-news-adm/8102-110%E5%AD%B8%E5%B9%B4%E5%BA%A6ssl-vpn%E9%80%A3%E7%B7%9A%E9%96%8B%E9%80%9A%E7%94%B3%E8%AB%8B%E5%85%AC%E5%91%8A">SSL-VPN連線申請</a><br/><br/><a href="https://nfucc.nfu.edu.tw/?p=17008">SSL-VPN服務教學<br/></a></pre>
</blockquote>
<p>Solidworks 繪圖操作與安裝配置</p>
<p><strong><img alt="" height="298" src="https://40923246.github.io/cad2021_hw/images/solidworks%E5%9C%96.PNG" width="401"/></strong></p>
<p><strong>Solidworks</strong> 緣起說明與介紹</p>
<blockquote>
<div><strong>SolidWorks</strong>是<strong>達梭系統</strong>（Dassault Systemes S.A.）旗下的<strong>SolidWorks</strong>公司開發的，運行在微軟Windows平台下的3D機械CAD軟體。<br/><strong></strong></div>
<div><strong></strong></div>
<div><strong>SolidWorks</strong>的是產品設計師和機械工程師使用的軟體，全世界其用戶範圍從個人到大公司，涵蓋非常廣泛的橫截面製造業細分市場。截至2011年第一季度，全球約有150多萬工程師，設計師和約15萬家公司是<strong>SolidWorks</strong>的用戶。</div>
<div><br/><strong>SolidWorks</strong>公司成立於1993年12月，其總部設在美國麻州康克爾郡，西元1995年發表其第一款產品<strong>SolidWorks 95</strong>，1997年被達梭系統併購，<strong>SolidWorks</strong>公司現在是達梭系統的子公司。</div>
</blockquote>
<div style="text-align: left;"><span><strong>Solidworks</strong> 功能簡介</span></div>
<blockquote>
<p><strong>SOLIDWORKS</strong><span><span> </span>2017 推出許多增強和改進功能，大多數為針對客戶要求的直接回應。</span><br/><br/><span>此版本提供下列優點，著重於幫助您比以往更快速輕鬆地完成工作：</span></p>
<ul>
<li>設計。 以精確先進的塑模功能促進創新。 加快工作速度、提高控制度並降低開銷。</li>
</ul>
<ul>
<li>驗證。 輕鬆自信地解決複雜問題及驗證設計。 提高生產力，同時更深入了解設計效能。</li>
</ul>
<ul>
<li>合作。 在完整供應鏈中有效地共用內容，以加速新產品的創新。 更有效率地利用現有內容及讓所有團隊成員都能參與。</li>
</ul>
<ul>
<li>建立。 實作完全整合且以模型為基礎的製造策略。 使用 3D CAD 模型，包括尺寸、公差、註記、表格及電子資訊，來產生所有的製造可交付項目</li>
</ul>
<ul>
<li>管理。 執行涉及多種領域的產品資料及管理工作流程。 收集和管理整個企業的所有設計資料。</li>
</ul>
</blockquote>
<div style="text-align: left;"><span><strong></strong></span></div>
<div style="text-align: left;"><span><strong>Solidworks </strong>繪圖操作<a href="https://www.youtube.com/watch?v=-3-U020uoCU">影片</a></span></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-3-U020uoCU" title="YouTube video player" width="560"></iframe><br/><strong></strong></p>
<p><strong>Solidworks </strong>安裝配置</p>
<p><a href="https://www.youtube.com/watch?v=HGB1pyiq7w4">Solidworks 2017</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/HGB1pyiq7w4" title="YouTube video player" width="560"></iframe></p>
<p>Solvespace 繪圖操作與安裝配置</p>
<p><strong><img alt="" height="220" src="https://40923246.github.io/cad2021_hw/images/solvespace-256.png" width="220"/></strong></p>
<p><strong>Solvespace</strong> 緣起說明與介紹</p>
<blockquote>
<div><strong>SolveSpace </strong>是一個免費的2D,3D CAD程序。它是一個基於約束的參數建模器，具有簡單的機械仿真功能。由 Jonathan Westhues 和一個志願者社區開發。</div>
</blockquote>
<p><strong>Solvespace </strong>特徵</p>
<blockquote>
<div><strong>Solvespace </strong>應用包括下列：</div>
<div>
<ul>
<li>建模 3D 零件 – 使用拉伸、旋轉、螺旋線和布爾操作（並/差）進行繪製。</li>
</ul>
<ul>
<li>建模 2D 零件 – 將零件繪製為單個部分，並導出為 DXF、PDF、SVG 檔；使用 3D 裝配驗證配合。</li>
</ul>
<ul>
<li>準備 CAM 數據 – 為水刀機或激光切割機導出 2D 矢量圖形； 或生成 STEP、STL，用於導入第三方 CAM 軟件。</li>
</ul>
<ul>
<li>機構設計 – 使用約束求解器模擬平面或空間鏈接，包括銷、球、滑動關節。</li>
</ul>
<ul>
<li>平面和實體幾何 - 用實時尺寸繪圖替換手工求解的三角函數和電子表格。</li>
</ul>
</div>
</blockquote>
<p><strong></strong></p>
<p><strong>Solvespace </strong>繪圖操作<a href="https://www.youtube.com/watch?v=FuA59x3MO7Y">影片</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/FuA59x3MO7Y" title="YouTube video player" width="560"></iframe></p>
<p><strong>Solvespace</strong> 安裝配置</p>
<p><strong><a href="https://www.youtube.com/watch?v=ZCj2Nxx8Gz8">Solvespace 3.0</a></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZCj2Nxx8Gz8" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>CoppeliaSim 運動場景</p>
<p><strong><img alt="" height="167" src="https://40923246.github.io/cad2021_hw/images/CoppeliaSim.png" width="600"/></strong></p>
<p><strong>Solidworks</strong>：</p>
<blockquote>
<p><strong>Solidworks</strong> 零件轉出後轉入 <strong>CoppeliaSim</strong> 操作影片 <a href="https://www.youtube.com/watch?v=s0pu8kKfNlA">(Youtube)</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/s0pu8kKfNlA" title="YouTube video player" width="560"></iframe></p>
<p><strong>Solidworks</strong> 零件轉入 <strong>CoppeliaSim</strong> 教學影片 (Wink)</p>
<p></p>
</blockquote>
<p><strong>Solvespace</strong>：</p>
<blockquote>
<p><strong>Solvespace</strong> 零件轉出後轉入 <strong>CoppeliaSim</strong> 操作影片 <a href="https://www.youtube.com/watch?v=81QLfMdoTfA">(Youtube)</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/81QLfMdoTfA" title="YouTube video player" width="560"></iframe></p>
<p><strong>Solvespace</strong> 零件轉入 <strong>CoppeliaSim</strong> 教學影片 (Wink)</p>
<p></p>
</blockquote>
<p>W13</p>
<p>W13 週評分查驗:</p>
<p>請在個人的 cad2021_hw 網站中的 HW1 最下方新增一個 H2 的頁面, 標題為 W13 (W 為大寫), 主要查驗個人 meArm 作業所完成的項目:</p>
<p>請建立一個 Wink 檔案說明截至目前所完成的兩套 CAD 零組件繪圖進度 (30%).</p>
<p>請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂第一軸, 加入<a href="https://www.coppeliarobotics.com/helpFiles/en/simUI-widgets.htm">slider</a>, 可以在執行時, 利用滑鼠拖動旋轉 360 度 (30%).</p>
<p>請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂其中的 1 ~ 3 軸 (夾爪除外), 加入 UI 介面 slider, 可以在執行時, 利用滑鼠拖動在各軸的極限位置旋轉 (40%).</p>
<p>完成上述各項後, 請將結果登錄至<a href="https://github.com/mdecourse/cad2021/discussions/14">作業區</a></p>
<p></p>
<p><strong>目前零組件進度</strong></p>
<p><span>mearm零組件(wink)</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="700" width="1100">
<source src="./../downloads/目前零件.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>first axis dynamic scene</p>
<p></p>
<p>second and third axis dynamic scene</p>
<p><span> </span></p>
<p>Final</p>
<p><a href="https://files.gitter.im/61338b9c6da037398484c1bb/Hy34/linkage-dimensioned.png">題目</a> <a href="https://raw.githubusercontent.com/KmolYuan/Pyslvs-UI/master/docs/img/main-win.png">要求</a></p>
<p><a href="https://drive.google.com/drive/folders/19PK_lntmxLiaSlOrzMcS3vgrlcptQBQT?usp=sharing">STL檔</a></p>
<p>零件狀態，solidworks組合</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1250" width="1650">
<source src="./../downloads/final.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoControlBarClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>solidwork組裝+要求</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1250" width="1650">
<source src="./../downloads/final-2.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoControlBarClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="color: #ffffff;"><span style="background-color: #ffffff;">心得：</span></span></p>
<p><span style="color: #ffffff;"><span style="background-color: #ffffff;">自己做出來的很碰壁，只會基礎的solidworks，只會畫不會組的solvespace，只會匯入移動不會動的coppelia sim，甚至連github 的pull requests 都失敗。不過因為有組長的幫忙我才能做到目前這樣，謝謝我的組長(40723217)</span></span></p>
<h1>資料管理</h1>
<p>隨便啦，這裡空著不會怎樣</p>
<h2>資料庫</h2>
<h3>CAD安裝配置</h3>
<p>CAD 套件包括 Solidworks, Inventor, NX, Onshape, Solvespace.</p>
<p>CAD 套件下載安裝與配置</p>
<p>CAD 下載安裝與配置流程 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 下載安裝與配置</span>」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.</span></p>
<p>若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.</p>
<p>由於安裝配置 Solidworks 時必須使用 nfu 的 vpn, 因此各學員必須按照<a href="https://www.nfu.edu.tw/zh/approved-news-nfu/approved-news-adm/8102-110%E5%AD%B8%E5%B9%B4%E5%BA%A6ssl-vpn%E9%80%A3%E7%B7%9A%E9%96%8B%E9%80%9A%E7%94%B3%E8%AB%8B%E5%85%AC%E5%91%8A">說明</a>, 完成本學期的 vpn 使用申請.</p>
<h4>Solidworks 分別提供 2017 與 2020 版本:</h4>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1KPpXzumzBIvMCovZdBYh0s468uFO277k/view?usp=sharing">SW2017 Professional 安裝光碟下載</a> (必須先登入 @gm 帳號後才能下載)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1tfRPPDIWgJuuPElLsIFv3bi_acNctp5u/view?usp=sharing">SW2020 Professional 安裝光碟下載</a> (必須先登入 @gm 帳號後才能下載)</p>
<h4>NX12 版本:</h4>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1fEZtGVCXp2vtILUZZ8vTTdtYHsbBpf7j/view?usp=sharing">NX12 安裝光碟下載</a> (必須先登入 @gm 帳號後才能下載)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1KWiceDX2513pWYfQzJPDboFzj5mfYokp/view?usp=sharing">NX12 可攜版本下載</a> (必須先登入 @gm 帳號後才能下載)</p>
<h4>Inventor:</h4>
<p style="padding-left: 30px;">請在校園網路, 使用 nfu vpn 或設定系上代理主機, 就可以從 <a href="https://2019wcm.blogspot.com/2019/07/autodesk-inventor-professional.html">https://2019wcm.blogspot.com/2019/07/autodesk-inventor-professional.html</a> 嘗試下載 autodesk.iso 後安裝 Inventor Professional 版本.</p>
<h4>Onshape:</h4>
<p style="padding-left: 30px;">至 <a href="https://www.onshape.com/en/">https://www.onshape.com/en/</a> 申請帳號後使用.</p>
<h4>Solvespace:</h4>
<p style="padding-left: 30px;">至 <a href="https://solvespace.com">https://solvespace.com</a> 下載或從 <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a> 下載原始碼, 以可攜程式系統自行編譯後使用.</p>
<h2>run</h2>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<h3>參考範例</h3>
<p><span>．cad2021 2b 各學員的 cad2021_hw 網站連結</span></p>
<blockquote>
<pre><span># </span>將資料存入<span> gist, </span>取其<span> url</span><br/><br/><span>url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt"</span><br/><br/><span># </span>利用<span> open() </span>開啟<span> url </span>後<span>, </span>以 <span>readlines() </span>讀取後可納入數列<br/><br/><span>data = open(url).readlines()</span><br/><br/><span># </span>檢查資料筆數<span>, </span>第一筆為<span> title</span><br/><br/><span>#print(data)</span><br/><br/><span>#print(len(data))</span><br/><br/><span>data = data[1:]</span><br/><br/><span>#print(data)</span><br/><br/><span>for i in range(len(data)):</span><br/><br/><span>    num_github = data[i] </span><br/><br/><span>    num = num_github.split("\t")[0]</span><br/><br/><span>    account = num_github.split("\t")[1]</span><br/><br/><span>    if account == "":</span><br/><br/><span>        account = num</span><br/><br/><span>    print("&lt;p&gt;&lt;a href='https://" + str(account) + ".github.io/cad2021_hw'&gt;"+ str(num) + "&lt;/a&gt;""&lt;a href='https://github.com/" + str(account) + "/cad2021_hw'&gt;"+ str(num) + "&lt;/a&gt;&lt;p&gt;")</span></pre>
</blockquote>
<p></p>
<p>．隨機從 2b 學員名單中取出 10 個網站</p>
<blockquote>
<pre>from browser import html<br/>from browser import document<br/>import random<br/><br/>brython_div = document["brython_div"]<br/><br/># 將資料存入 gist, 取其 url<br/>url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt"<br/># 利用 open() 開啟 url 後, 以 readlines() 讀取後可納入數列<br/>data = open(url).readlines()<br/># 檢查資料筆數, 第一筆為 title<br/>#print(data)<br/>#print(len(data))<br/>data = data[1:]<br/>#print(data)<br/><br/># 根據 href 與 content 將 html 元件中的 anchor 插入頁面<br/>def makeLink(href, content):<br/> brython_div &lt;= html.A(content, href=href)<br/> brython_div &lt;= html.BR()<br/><br/><br/># 從學員資料中隨機取出 10 位學員的網頁進行查核<br/>select = 10<br/>random.shuffle(data)<br/>data = data[:10]<br/><br/>for i in range(len(data)):<br/> num_github = data[i] <br/> num = num_github.split("\t")[0]<br/> account = num_github.split("\t")[1]<br/> if account == "":<br/> account = num<br/> content = str(num)<br/> href = "https://"+ str(account) + ".github.io/cad2021_hw"<br/> makeLink(href, content)</pre>
</blockquote>
<h2>Wink</h2>
<div><a href="https://40723217.github.io/cad2021_hw/content/W13.html">隨便找一位</a>有上傳wink影片的網站</div>
<p><img alt="" height="674" src="/images/wink1 2022-01-05 003736.png" width="1200"/></p>
<div>檢視頁面來源</div>
<div></div>
<p><img alt="" height="675" src="/images/wink2 2022-01-05 003938.png" width="1200"/></p>
<div>找一下程式碼的位置</div>
<div>Ctrl+F 關鍵字：<span>winkVideoData</span></div>
<p><span></span></p>
<blockquote>
<div>&lt;script&gt;<br/>var winkVideoData = {<br/> dataVersion: 1,<br/> frameRate: 20,<br/> buttonFrameLength: 10,<br/> buttonFrameOffset: 5,<br/> frameStops: {<br/> },<br/>};<br/>&lt;/script&gt;<br/>&lt;div class="winkVideoContainerClass"&gt;&lt;video class="winkVideoClass" data-dirname="<span style="color: #ffffff;"><span style="background-color: #000000;">./../cmsimde</span></span>/static" data-varname="winkVideoData" <span style="color: #ffffff;"><span style="background-color: #000000;">height="600" width="1000"</span></span>&gt;<br/>&lt;source src="./../downloads/<span style="color: #ffffff;"><span style="background-color: #000000;">SWwrite.mp4</span></span>" type="video/mp4"/&gt;&lt;/video&gt;<br/>&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;<br/>&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;<br/>&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;<br/>&lt;/div&gt;</div>
</blockquote>
<div></div>
<div>delete「<span style="color: #ffffff;"><span style="background-color: #000000;">./../cmsimde</span></span>」</div>
<div></div>
<div>「<span style="color: #ffffff;"><span style="background-color: #000000;">height="600" width="1000"</span></span>」改適當尺寸</div>
<div>例：「<span>height="700" width="1100"」</span></div>
<div><span></span></div>
<div>「<span style="color: #ffffff;"><span style="background-color: #000000;">SWwrite.mp4</span></span>」到自己資料夾downloads，找自己.mp4檔名改上去</div>
<div><img alt="" height="33" src="/images/wink3 2022-01-05 003938.png" width="517"/></div>
<div><img alt="" height="22" src="/images/wink4 2022-01-05 012552.png" width="467"/></div>
<div>例：&lt;source src="./../downloads/「<span style="color: #ffffff;"><span style="background-color: #000000;">目前零件.mp4</span></span>」" type="video/mp4" /&gt;</div>
<p></p>
<p>註：黑底白字程式碼<br/>&lt;span style="color: #ffffff;"&gt;&lt;span style="background-color: #000000;"&gt;想寫文字&lt;/span&gt;&lt;/span&gt;</p>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>